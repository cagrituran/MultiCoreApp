---------------------------------------------14.04.2022----------------------------------------------------------------------------------
Coredayız BlankSolution bizde açılmadıgı için Core açtık 
3 tane class library açtık sonra 1 tane mvc web 'i bulup açtık
anlatıldı ve projeye baslandı
Core Katmanına 4 tane folder eklendi
MOdelsin içine Product classı eklendi ve içine kodlar yazıldı
Category Modelsin içine açıldı kodlar yazıldı
sonra IntRepository içine IRepository içine kodlar yazıldı Task sınıfı asenkron programlama için yazıldı dbyi ve viewi bölerek calıstırmak amacıyla
IProductRepository interface açtık ve imzaları yazdık
ICategoryRepository interface actık imzaları yazdık
Service IService interface yazdık ve IRepository içindeki kodları oraya kopyaladık çünkü APIden gelen kullanıcının Db'ye erişmesini istemiyorum
IProductService ve ICategoryService interfaceleri açılıp imzalar yazıldı
Service katmanı businesslayer'a karşılık gelir
UnitOfWork katmanı bir patterndir bir IUnitOfWork interface açıldı ve içine yazıldı ChangeTracker ile add ile savechange arasında bir şey yerleştirmek gerekirse UnitOfWork ile bunu sağlayabiliriz
Program cs de bisiler anlatıldı
Sonra DataAccessLayerda Repository folderı acıldı ve ihtiyacımız oldugu için Context classını olusturduk ve DbContext sınıfını kullanabilmemiz için nugetten core'ı indirdik
Kodlar yazıldı
API'nin içinde appsettings.json içine connectionstrings yazıldı fakat dataaccesslayerda da bu bilginin tasınması için program.csnin içine servis yazılması gerek yazdık fakat ondan önce EntityFrameWork Core SqlServerini Nugetten Api'ye yükledik
migration için bir sürü paket indirdik add-migration Init yaptık
program csde AddSingleton  ne olursa olsun sadece 1 defa olusturulsun 
AddTransient kaç kere tetikleniyorsa o kadar kez tetikleniyorsa
AddScoped yaşam döngüsünde ( response-request arası) bir kere tetiklenecek
---------------------------------------------15.04.2022----------------------------------------------------------------------------------
Repository Metodların içini yazdık
ProductRepository sınıfı acıldı
intleri guid tipine çevirdik ve öncesinde Repository'i degistirdik
CategoryRepository açıldı yazıldı
Service klasörü açıldı içine Service classı açıldı
UnitOfWork Degistirildi ( IUnitOfWorkde degistirildi)
service yazılıyordu iservicenin addlarını değiştirdik
sonra service tamamlandı ondan sonra Category ve Product Servicelerini açıp metodları yazdık
dalda Configurations olusturuldu
içine fluentApiler yazıldı sonra ForeignKey kısmını yorum satırına alıp
MultiDbContextde OnModelCreating metodu yazıldı
Sonra DALDA Seeds folderı açıldı
CategorySeed ve ProductSeed Yazıldı,new category silindi add-migration düzeldi
CategoryController açıldı
---------------------------------------------18.04.2022----------------------------------------------------------------------------------
automapper dependency injection mvc ve api katmanı için nugetten indirildi
Program.cs'ye AddAutoMapper'ı ekledik(çalışmak istedigimz şeyler program.cs'de tetiklenir.)
DTO's klasörü açtık ve içinde ProductDto,CategoryDto açtık ( kullanıcının görecegi kısım)
Mapping klasöre MapProfile açıldı ( hangi tablolarla değişim yapacağını belirtmeliyim)
sonra CategoryController'da return OK'un içinde Mapping yaptırdık(Category için PUT VE POST işlemleri yapıldı)
CategoryWithProductsDto classı açıldı çünkü categorylere bağlı productları getirmem gerek
aynısını ProductController yapıp düzelttik
Customer classı açıldı
---------------------------------------------19.04.2022----------------------------------------------------------------------------------
Filters klasörü açıldı(Filterlar örneğin kullanıcıdan olmayan bi id geldiginde hata üretmesini istiyorum)
CategoryNotFoundFilter açıldı içine kod yazıldı calısması için program.cs'ye yazdık ve CategoryControllerda hangi metod calısacagını metodun üstüne yazdık,product içinde yapılabilir
ValidationFilter açıldı kodları yazıldı ve bütün kontrollerda kullanabilmesi için program.csde addcontrollersin içine method yazıldı bunuda kullanmak için Controller'ın tepesine validationFilter yazılıyor,beceremedik sora bakıcaz
Extensions / UseCustomExtensionHandler  --> Extensionlar static olmalıdır.Request-response arasında middleware olarak çalısacak işi yapıp çekilecek ihtiyaç dahilinde
Nugetten newjson'ı mvc apiye kurduk
class tipindeki veriyi json'a çeviriyorum ve kullanıcıya öyle gönderiyorum ( server hataları)
calısması için middleware kısmında calıstırıldı
ValidationFilter için program.cs'e suppresleyen bi kod yazıldı ve kendi hatamızın gözükmesi sağlandı ve controllerdan ValidationFilter kaldırıldı
MVC'ye DTOs katmanı açıp apiden mvcye classları kopyaladık
mvcde categorycontroller acıldı
omdb api json tipinde veri döndüren imdb sitesi
CategoryController Index AR yazarken view olusturduk
ViewImportsa using tanımladık Index viewinde kısayol kullanma kolaylıgı sağlandı
Index'i yazdıktan sonra API'den yer alan program.csdeki AddScopeları ve Mapping dosyalarını da MVC'ye alıp MVCDen çalıstırdık(Henüz API-MVC arası bağlantımız yok)
---------------------------------------------20.04.2022----------------------------------------------------------------------------------
apiyi tetiklememiz gerekiyor yukardan multiple startup projects olması lazım
ApiServices klasörü açıldı ve içine CategoryApiService açıldı(uzakta bir sunucuya bağlanacagız yani api'ye)
yazarken appsettings'e launchsttingsden port numarsı öğrenip yapıstırıyorum sonuna apide hep geleceği için apiyide yerlestirildik
kullanmak için de program cs de yazıldı
tetiklemek için mvcdeki categorycontrollera yazdık
Post işlemi için categoryapiservice yazıldı
categorycontroller içinde yazıldı (MVC)
sonra o yazılırken create view açıldı ve yazıldı
get işlemini parametreli olarak apiservicede yazıp kullandık örnek olması acısından
CategoryControllerda Details AR 'si yazıp view yazdık kullandık
update işlemi için categoryapiservice için servis yazılıp mvc tarafında categorycontrollerda da get ve post kısmını yazdık
Sonra Update view açıldı ve yazıldı updateler edit olarak degistirdi cünkü apideki update gidiyordu
---------------------------------------------21.04.2022----------------------------------------------------------------------------------
product yapılacak bu yapılırken controller yaratırken entityframework kullanarak olusturduk ve sanal kullanmayacagımız bir db addledik
productapiservice olusturduk
controllerda ARleri yazdıktan sonra viewları olusturduk
calıstı fakat ProductsWithCategoryDto'ya dönüştürdük hepsini bu kategori isimleri boş geliyordu bu yüzden metod ekleyerek bütün katmanlara metod ekleyerek apiden devam etmeye karar verdik apide ProductControllera AR yazdık
Sonra swaggerda verileri çektikten sonra mvcden tetikleyip viewımda göstermek amacıyla mvc tarafında önce apiservicimde metodları yazıp sonra controllerdan tetiklemek amacıyla ar'ler yazıldı
---------------------------------------------06.06.2022---------------------------------------------------------------------------
jwt uygulanması için user sınıfı olusturukldu